from aiogram import Router, types
from aiogram.filters import Command
from keyboards.reply import get_main_keyboard, get_admin_keyboard
from keyboards.inline import get_inline_keyboard
from utils.users import get_or_create_user, is_admin

router = Router()


@router.message(Command("start"))
async def cmd_start(message: types.Message):
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º/–æ–±–Ω–æ–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ
    user = await get_or_create_user(
        user_id=message.from_user.id,
        username=message.from_user.username,
        first_name=message.from_user.first_name,
        last_name=message.from_user.last_name
    )

    welcome_text = (
        "üéâ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!\n\n"
        "–Ø –≤–∞—à —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞–º–∏ –∏ –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö!\n"
        "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –∏–ª–∏ –∫–æ–º–∞–Ω–¥—ã."
    )

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–æ–º
    admin_status = await is_admin(message.from_user.id)
    print(f"üë§ User {message.from_user.id} admin status: {admin_status}")

    if admin_status:
        await message.answer(welcome_text, reply_markup=get_admin_keyboard())
        await message.answer("üëë <b>–í–∞–º –¥–æ—Å—Ç—É–ø–Ω–∞ –ø–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞!</b>\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /admin",
                             parse_mode="HTML")
    else:
        await message.answer(welcome_text, reply_markup=get_main_keyboard())


@router.message(Command("help"))
async def cmd_help(message: types.Message):
    help_text = (
        "üìö <b>–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>\n\n"
        "/start - –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞\n"
        "/help - –ü–æ–º–æ—â—å\n"
        "/inline - –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω–ª–∞–π–Ω –º–µ–Ω—é\n"
        "/keyboard - –ü–æ–∫–∞–∑–∞—Ç—å –æ—Å–Ω–æ–≤–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É"
    )

    # –î–æ–±–∞–≤–ª—è–µ–º –∞–¥–º–∏–Ω—Å–∫–∏–µ –∫–æ–º–∞–Ω–¥—ã –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω
    if await is_admin(message.from_user.id):
        help_text += "\n\n<b>üëë –ö–æ–º–∞–Ω–¥—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:</b>\n"
        help_text += "/admin - –ø–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞\n"
        help_text += "/stats - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞\n"
        help_text += "/broadcast - —Ä–∞—Å—Å—ã–ª–∫–∞\n"
        help_text += "/users - —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"

    await message.answer(help_text, parse_mode="HTML", reply_markup=get_main_keyboard())


@router.message(Command("inline"))
async def cmd_inline(message: types.Message):
    await message.answer("üîò –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=get_inline_keyboard())


@router.message(Command("keyboard"))
async def cmd_keyboard(message: types.Message):
    if await is_admin(message.from_user.id):
        await message.answer("‚å®Ô∏è –ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:", reply_markup=get_admin_keyboard())
    else:
        await message.answer("‚å®Ô∏è –û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é:", reply_markup=get_main_keyboard())


@router.message(Command("admin"))
async def cmd_admin_direct(message: types.Message):
    """–ü—Ä—è–º–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /admin"""
    from handlers.admin import cmd_admin
    await cmd_admin(message)